== Call Dispatch Framework ==

=== Investigate ===
[ ] ? Use "call prototype" in "call builders"
[ ] ? Introduce "CallBuilder" interface
[ ] ? Cleanup {tx, call} ids?
[ ] ? Usage of Response.setMessage / getMessage
[ ] ? What happens in case of exception in CallableRequest?
    Is rethrown in ExecutionException, caught in RequestDispatcher
[ ] ? Investigate timeout on "Response#get()". (Do not confuse this with releasing of resources by aborting a request, with (possibly) the same time out.)
	? Why, what is the usage of this?
[ ] Split Request into internal interface and external interface?
[ ] ? Remove response from exec and execAsync?
    ! Remove requestDispatcher's responses. Add "response" to interface, remove getResponse from Request.

[ ] ? Register timeout count on queue?

[ ] ? Change configuration of requests (RequestConfiguration / Context / Constructor)

=== Bug ===

=== Todo ===
[X] Make a request executor, use request executor in dispatcher
	- Changed request dispatcher to have one simple inner 'execute( request )' method.
[X] Make an asyc wrapper around request executor
	- Introduced AsyncFutureRequest, AsyncRequestCallable

[X] Add 'isSynchronous' to Request

[X] Make (a)sync call block on "Response#get()"

[X] Remove getAbortableRequest from FutureRequest

[X] Set queue statistics inside dispatcher (not in executor repository)

[X] Move finish to end of request dispatcher, add logResult to request.finish()
	- Finish does signalDone, logResponse

[X] Remove finish() call in "AbstractAbortableRequest#doCallBack()"

[X] Mark classes as @Threadsafe / @NotThreadSafe

[X] Remove HttpClientBuilder from request dispatcher.

[ ] Make sure in error situations the response is logged.
[ ] Log request & queue statistics of async requests

[X] Move logging of schedule of request to ThreadPoolExecutor.
[X] Introduce "TimeOut" with Unit and Size

[ ] ! Make sure call returns an answer (i.e. response status is set)

[ ] ! TEST

[ ] Examples

[ ] Document minimal configuration
    ! Pool names
    ! ...
    

=== Todo (incompatible with 1.0) ====
[ ] executorServiceRepository should have an 'async pool'
	! Different branch / pull request, config change needed!

[ ] Remove LogManager from CallLogger
[ ] Remove LoggingContextMap from Response

[ ] Create HTTP Response to extend Response
	! Different branch / pull request

[ ] Create HTTP RequestContext to contain base url

=== New ===
[X] SQL
    ! See ContactDbRepository#getContactById() for implementation

[X] Builders
    [X] Prototype in builders
    [ ] Use real call as prototype
    [X] Add prototype to AbstractAbortableRequest and HttpRequestBuilder
    [X] Create SQL Builder


======
? ResponseHandler .... it MUST set a response, or throw an exception.